#include <iostream>
#include <string>
#include <vector>
#include "Store.h"
#include "StoreInfo.h"
using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");

    Store mag("https://example.com/product", 30, 10, 1000);

    mag.updateData(950, 8);
    mag.updateData(900, 5);
    mag.updateData(850, 3);
    mag.updateData(900, 2);
    mag.updateData(1000, 1);

    mag.printInfo();
    cout << mag;
    //StoreInfo magazine("https://example.com/products", 30, 150, 5000, 4.2f, 42, 8);

    //magazine.printFullInfo();
    return 0;
}
/*
Лабораторная работа № 6. Шаблоны
Оформите шаблон, указав константы на пороговые значения для определения добросовестности сотрудников. 
В шаблоне также определите шаблон на тип значения объемов памяти (чтобы можно было вести учет в int или double). Измените логику вывода на
консоль в соответствии с шаблоном.
Вариант 6. «Поиск оптимальной стоимости товара»
Предметная область будущих классов. Вам очень понравились несколько телефонов в одном интернет-магазине. Но Вы продвинутый покупатель и решили не покупать не
раздумывая, а посмотреть на динамику изменения цены, так как Вы подозреваете, что она
меняется. Вы написали скрипт, который забирает текущую стоимость каждого телефона
раз в день со страницы товара, теперь Вам нужен контейнер для хранения данной информации. Но при этом Вы боитесь, что товар закончится, поэтому Вы забираете с сайта еще
количество доступных к покупке телефонов, чтобы при наличии малого количества товара
в остатках экстренно его купить.
Лабораторная работа № 2. Базовый синтаксис классов
Сформируйте класс для хранения информации о цене и количестве конкетного товара. Возможные поля класса:
- количество дней мониторинга;
- URL до страницы с товаром (массив char*);
- текущая стоимость;
- текущее количество товара;
- текущий день мониторинга;
- динамика изменения цены (массив) с частотой мониторингом раз в день;
- средняя, максимальная и минимальная стоимость.
Конструктор с параметрами – URL-ссылка на товар, общее предполагаемое количество дней мониторинга, текущее количество товара, текущая стоимость товара.
Селекторы на все поля (кроме массивов).
Метод триггера на небольшой остаток (возвращает true, если осталось менее
2 единиц товара).
Метод возврата текущей динамики изменения цены: возврат 0 – текущая цена стабильна, 1 – текущая цена растет, 2 – текущая цена падает, 3 – текущая цена в минимуме за
весь мониторинг, 4 – текущая цена в максимуме за весь мониторинг. Оформить эти константы в enum.
Метод вывода на консоль динамики изменения цены и сводной информации
по другим полям.
Метод вноса текущих данных по товару с параметрами: текущая стоимость и количество остатка товара, обновляет сводные параметры (в том числе увеличение дня мониторинга).
Деструктор на освобождение массивов.
Определите, как минимум 6 исключений по вводу параметров: на нулевые параметры, выход за время мониторинга, проданный товар и т.д.
Используйте ссылки, константные методы и модификатор const в нужных местах.
Лабораторная работа № 3. Перегрузка методов и операторов
Необходимо перегрузить методы и операторы.
Выполнить перегрузку конструктора с двумя параметрами (URL и текущий остаток, задумайтесь о параметрах по умолчанию).

Выполнить перегрузку метода вывода с вводом номера дня мониторинга и выводом информации только для него.
Выполнить перегрузку оператора «[]» для получения цены товара
на определенный день мониторинга.
Выполнить перегрузку оператора «<<» для вывода только сводной информации
ostream& operator << (ostream &out, ClassName& ourObject)
Лабораторная работа № 4. Наследование
Создайте производный класс, который бы позволил еще сохранять текущий рейтинг товара, количество положительных и отрицательных отзывов. Установить селекторы
и модификаторы для этих полей. Реализовать метод вноса текущих данных по товару с
учетом этих полей. Изменить вывод на консоль в производном классе с учетом новых полей. При необходимости измените модификаторы доступа у базового класса.
Лабораторная работа № 5. Абстрактные классы и интерфейсы
Обеспечьте возможность работы с массивом типа базового класса (массив указателей), в котором будут содержаться объекты производного и базового классов. Создайте
интерфейс для вывода на консоль и оператора «<<». Иерархия наследования «интерфейс
→ базовый класс → производный класс».
Лабораторная работа № 6. Шаблоны
Оформите шаблон, где можно будет вести учет цены товара с копейками и без.
Укажите в шаблоне константу на пороговый уровень триггера на небольшой остаток.
*/